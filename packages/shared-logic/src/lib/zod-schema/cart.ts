import { z } from "zod";

export const cartItemConfigurationSchema = z.object({
  avail_1: z.string(),
  avail_2: z.string(),
  avail_3: z.string(),
  avail_4: z.string(),
  avail_5: z.string(),
  plant_1: z.string(),
  plant_2: z.string(),
  plant_3: z.string(),
  plant_4: z.string(),
  plant_5: z.string(),
  poOrJobName: z.string().optional().nullable(),
  shipping_method_1: z.string(),
  shipping_method_2: z.string(),
  shipping_method_3: z.string(),
  shipping_method_4: z.string(),
  shipping_method_5: z.string(),
  will_call_avail: z.string(),
  will_call_plant: z.string(),
  hashvalue: z.string(),
  selectedOption: z.string(),
  backorder_all: z.string(),
  backorder_date: z.string(),
  backorder_quantity: z.string(),
  will_call_shipping: z.string().optional(),
  will_call_not_in_stock: z.string(),
});
export type CartItemConfiguration = z.infer<typeof cartItemConfigurationSchema>;

export const cartConfigurationSchema = z.object({
  po_job: z.string().nullable(),
  jobName: z.string().nullable(),
  coupon: z.string().nullable(),
  po: z.string().nullable(),
  sold_to: z.string().nullable(),
  ship_to: z.string().nullable(),
  user_email: z.string().nullable(),
  is_overridden: z.boolean().nullable(),
  overridden_email: z.null(),
  osr: z.null(),
  "first-name": z.string().nullable(),
  default_shipping: z.union([z.boolean(), z.string()]).optional(),
  delivering_plant: z.string().nullable(),
  avail_payment_options: z.string().optional(),
  attnName: z.string().nullable(),
  pickDate: z.string().nullable(),
  driverNote: z.string().nullable(),
  orderEmail: z.string().nullable(),
  completeDelivery: z.boolean().nullable(),
  paymentToken: z.string().nullable(),
  cardName: z.string().nullable(),
  cardType: z.string().nullable(),
  expireDate: z.string().nullable(),
  paymentMethod: z.string().nullable(),
  isAPrimaryShippingAddress: z.boolean().nullable().optional(),
  shippingAddressId: z.string().nullable(),
  backorder_date: z.string().optional(),
  backorder_quantity: z.string().optional(),
});
export type CartConfiguration = z.infer<typeof cartConfigurationSchema>;

export const cartSchema = z.object({
  cartItems: z.array(
    z.object({
      code: z.string(),
      quantity: z.number(),
      cart_item_id: z.number(),
      configuration: cartItemConfigurationSchema,
      itemInfo: z.object({
        productid: z.string(),
        is_product_exclude: z.boolean(),
        txt_wurth_lac_item: z.string(),
        item_name: z.string(),
        img: z.string(),
        url: z.string().optional(),
        is_favourite: z.boolean(),
        is_comparison: z.boolean(),
        txt_hazardous: z.string(),
        txt_special_shipping: z.string(),
        txt_sap: z.string(),
        txt_mfn: z.string(),
        txt_description_name: z.string(),
        txt_sub_description: z.string(),
        sel_assigned_brand: z.string(),
        txt_uom: z.string(),
        txt_uom_label: z.string(),
        txt_uom_value: z.null(),
        txt_rounding: z.null(),
        txt_box_qt: z.string(),
        txt_min_order_amount: z.string(),
        txt_order_qty_increments: z.string(),
        txt_weight_value: z.string(),
        txt_wight: z.string(),
        txt_weight_label: z.string(),
        date: z.string(),
        txt_chemical_carncengen: z.array(z.string()).nullable(),
        txt_chemical_reproduction: z.array(z.string()).nullable(),
        txt_contains_wood: z.null(),
        txt_prop65_message_01: z.string().nullable(),
        txt_prop65_message_02: z.string().nullable(),
        txt_prop65_message_03: z.string().nullable(),
        txt_meta_title: z.string(),
        txt_upc1: z.string(),
        txt_seo_meta_description: z.string(),
        txt_keywords: z.string(),
        list_price: z.string(),
        on_sale: z.string(),
        is_new: z.string(),
        fclassid: z.null(),
        brand_name: z.string(),
        txt_group_code: z.null(),
        item_status: z.string(),
        category_name: z.string(),
        product_summary: z.string(),
        is_directly_shipped_from_vendor: z.boolean(),
        slug: z.string(),
      }),
    }),
  ),
  configuration: cartConfigurationSchema,
  "total-quantity": z.number(),
  allRegionalExluded: z.boolean(),
});
export type Cart = z.infer<typeof cartSchema>;
